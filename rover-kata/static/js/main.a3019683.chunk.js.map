{"version":3,"sources":["input/Input.js","dialogcards/DialogCard.js","travellog/TravelLog.js","classes/Rover.js","classes/Grid.js","IndexComponent.js","index.js"],"names":["Input","props","state","value","isValid","handleChange","bind","e","this","setState","target","validator","test","htmlFor","id","label","type","onChange","autoFocus","className","hint","Component","DialogCard","message","heading","inputValue","inputId","step","currentGridSize","onClick","document","getElementById","updateGridSize","nextMessage","addRoverCommands","roverCount","runMap","viewTravelLog","resetGrid","TravelLog","logNode","logElement","rovers","map","rover","index","key","name","travelLog","ReactDOM","createPortal","Rover","x","y","dir","grid","roverNames","direction","position","status","missionResult","compass","commands","movesSkipped","getCellInfo","addRover","push","missionStatus","console","error","indexOf","length","recordMove","stop","reason","command","skipMove","inspectResult","prevX","prevY","moveRover","clearCell","val","replace","com","unshift","Array","isArray","trim","charAt","reverse","pop","moveForward","moveBackward","turnLeft","turnRight","Grid","xSize","ySize","i","fill","history","mapClone","forEach","row","o","obj","mps","undefined","parseInt","indexCounter","int","setInterval","getNextIndex","arr","callback","filter","clearInterval","move","mars","IndexComponent","layout","listening","controlStep","prinntTravelLog","addObstacle","handleObstacleClick","handleRoverClick","printTravelLog","reset","body","style","setProperty","nextProps","nextState","addEventListener","removeEventListener","size","Number","classList","contains","Math","floor","currentRoverIndex","addCommands","run","flat","cell","Object","join","hasOwnProperty","rootNode","render"],"mappings":"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","file":"static/js/main.a3019683.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './input.scss';\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n      isValid: true,\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value,\n      isValid: this.props.validator.test(e.target.value),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <label htmlFor={this.props.id}>{this.props.label}</label>\n        <input type={this.props.type} id={this.props.id} value={this.state.value} onChange={this.handleChange} autoFocus />\n        <div className={!this.state.isValid ? 'input-hint-warning' : 'input-hint'}>{this.props.hint}</div>\n      </>\n    );\n  }\n}\n\nexport default Input;","import React from 'react';\n\nimport Input from '../input/Input';\n\nconst DialogCard = (props) => {\n  let message;\n  let heading;\n  let inputValue;\n  let inputId;\n  switch(props.step) {\n    case 1:\n      heading = 'Welcome to Mars Rover kata!';\n      inputValue = props.currentGridSize;\n      inputId = 'set-grid-size';\n      message = (\n        <>\n          <div className=\"input-field\">\n            <Input type=\"number\" value={props.currentGridSize} label=\"Set grid size:\" id={inputId} hint=\"Integer between 5 and 25\" validator={/(^[5-9]$|^1[0-9]$|^2[0-5]$)/} />\n          </div>\n          <div className=\"submit-field\">\n            <button type=\"button\" onClick={() => {\n              inputValue = document.getElementById(inputId).value;\n              inputValue !== props.currentGridSize ? props.updateGridSize(inputValue) : props.nextMessage();\n            }}>Next</button>\n          </div>\n        </>\n      );\n      break;\n    case 2:\n      heading = 'Click on map to set obstacles';\n      message = (\n        <>\n          <div className=\"submit-field\">\n            <button type=\"button\" onClick={() => {\n              props.nextMessage();\n            }}>Next</button>\n          </div>\n        </>\n      );\n      break;\n    case 3:\n      heading = 'Click on map to put a rover';\n      message = '';\n      break;\n    case 4:\n      inputValue = '';\n      inputId = 'set-grid-size';\n      heading = 'Upload commands for the rover';\n      message = (\n        <>\n          <div className=\"input-field\">\n            <Input type=\"text\" value=\"\" label=\"Commands:\" id={inputId} hint=\"f - go forward; b - go backward; s - skip move; l - turn left; r - turn right\" validator={/^[fbrls]+$/} /> \n          </div>\n          <div className=\"submit-field\">\n            <button type=\"button\" onClick={() => {\n              inputValue = document.getElementById(inputId).value;\n              inputValue !== '' ? props.addRoverCommands(inputValue) : props.nextMessage();\n            }}>Next</button>\n          </div>\n        </>\n      );\n      break;\n    case 5:\n      if (props.roverCount >= 4) {\n        props.nextMessage();\n      } else {\n        heading = 'Add another rover?';\n        message = (\n          <>\n            <div className=\"submit-field\">\n              <button type=\"button\" onClick={() => {\n                props.nextMessage(3);\n              }}>Yes</button>\n              <button type=\"button\" onClick={() => {\n                props.nextMessage();\n              }}>No</button>\n            </div>\n          </>\n        );\n      }\n      break;\n    case 6:\n      heading = 'Set rover speed';\n      inputValue = '2';\n      inputId = 'set-mps';\n      message = (\n        <>\n          <div className=\"input-field\">\n            <Input type=\"number\" value=\"2\" label=\"Moves per second:\" id={inputId} hint=\"Integer between 1 and 25\" validator={/(^[1-9]$|^1[0-9]$|^2[0-5]$)/} /> \n          </div>\n          <div className=\"submit-field\">\n            <button type=\"button\" onClick={() => {\n              inputValue = document.getElementById(inputId).value;\n              props.runMap(inputValue);\n            }}>Run</button>\n          </div>\n        </>\n      );\n      break;\n    case 7:\n      heading = 'Go, rover, go!';\n      message = '';\n      break;\n    case 8:\n      heading = 'Race is over!';\n      message = (\n        <div className=\"submit-field\">\n          <button type=\"button\" onClick={() => {\n            props.viewTravelLog();\n          }}>View Travel Log</button>\n          <button type=\"button\" onClick={() => {\n            props.resetGrid();\n          }}>Start again</button>\n        </div>\n      );\n      break;\n    default:\n      heading = 'Something went wrong!';\n  }\n  return (\n    <div className=\"dialog-card\">\n      <h3>{heading}</h3>\n      {message}\n    </div>\n  )\n}\n\nexport default DialogCard;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './travel-log.scss';\n\nconst TravelLog = (props) => {\n  const logNode = document.getElementById('travel-log');\n  const logElement = (\n    <div className=\"travel-log\">\n      <div className=\"content-wrapper\">\n        <h1>Travel Log</h1>\n        <button type=\"button\" onClick={props.resetGrid}>Start again</button>\n        <div className=\"flex-row\">\n          {props.rovers.map((rover, index) => (\n            <div className=\"log-panel\" key={`log-panel-${index}`}>\n              <h3>{rover.name}</h3>\n              <ul className=\"log-list\">\n                {rover.travelLog.map(({ message }, id) => (\n                  <li key={`message-${id}`}>{message}</li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n  return ReactDOM.createPortal(\n    logElement,\n    logNode\n  );\n}\n\nexport default TravelLog;","class Rover {\n  constructor(id = 1, x = 0, y = 0, dir = 'n', grid) {\n    const roverNames = ['Curiosity', 'Spirit', 'Opportunity', 'Sojourner'];\n    this.id = id;\n    this.name = roverNames[id - 1] || roverNames[0];\n    this.direction = dir;\n    this.x = x;\n    this.y = y;\n    this.position = [x, y];\n    this.travelLog = [];\n    this.status = 'moving';\n    this.missionResult = 'running';\n    this.compass = ['n', 'e', 's', 'w'];\n    this.commands = [];\n    this.movesSkipped = 0;\n    this.map = grid;\n    if (grid.getCellInfo(x, y).status === 'clear') {\n      grid.addRover(this, x, y);\n      this.travelLog.push({\n        message: `Initialized on position x: ${this.x}, y: ${this.y}. Turning power on and ready to roll...`,\n        missionStatus: this.missionResult,\n        status: this.status,\n      });\n    } else {\n      this.map = {};\n      console.error('Cannot add rover on the map. Reassign position or add new map');\n    }\n  }\n\n  changePosition([x, y]) {\n    this.x = x;\n    this.y = y;\n    this.position = [x, y];\n  }\n\n  addMap(grid) {\n    if (grid.getCellInfo(this.x, this.y).status === 'clear') {\n      this.map = grid;\n      grid.addRover(this, this.x, this.y);\n    } else {\n      this.map = {};\n      console.error('Cannot add rover on the map. Reassign position or add new map');\n    }\n  }\n\n  turnLeft() {\n    let index = this.compass.indexOf(this.direction) - 1;\n    this.direction = this.compass[index < 0 ? 3 : index];\n    this.status = this.commands.length ? this.status : 'stopped';\n    this.missionResult = this.commands.length ? this.missionResult : 'accomplished';\n    this.travelLog.push({\n      message: `Turned left on position x: ${this.x}, y: ${this.y}.${this.missionResult === 'accomplished' ? '\\nMission accomplished!' : ''}`,\n      missionStatus: this.missionResult,\n      status: this.status,\n    });\n    this.map.recordMove();\n  }\n\n  turnRight() {\n    let index = this.compass.indexOf(this.direction) + 1;\n    this.direction = this.compass[index > 3 ? 0 : index];\n    this.status = this.commands.length ? this.status : 'stopped';\n    this.missionResult = this.commands.length ? this.missionResult : 'accomplished';\n    this.travelLog.push({\n      message: `Turned right on position x: ${this.x}, y: ${this.y}.${this.missionResult === 'accomplished' ? '\\nMission accomplished!' : ''}`,\n      missionStatus: this.missionResult,\n      status: this.status,\n    });\n    this.map.recordMove();\n  }\n\n  skipMove() {\n    if (this.movesSkipped < 3) {\n      this.status = this.commands.length ? this.status : 'stopped';\n      this.missionResult = this.commands.length ? this.missionResult : 'accomplished';\n      this.travelLog.push({\n        message: `Skipped move on position x: ${this.x}, y: ${this.y}.${this.missionResult === 'accomplished' ? '\\nMission accomplished!' : ''}`,\n        missionStatus: this.missionResult,\n        status: this.status,\n      });\n      this.map.recordMove();\n    } else {\n      this.stop('occupied cell');\n    }\n  }\n\n  stop(reason) {\n    this.status = 'stopped';\n    this.missionResult = 'failed';\n    this.commands = [];\n    this.travelLog.push({\n      message: `Stuck on position x: ${this.x}, y: ${this.y}. Reached ${reason}. Turning power off, waiting for new instructions...`,\n      missionStatus: this.missionResult,\n      status: this.status,\n    });\n    this.map.recordMove();\n  }\n\n  moveForward(command) {\n    let x;\n    let y;\n    switch(this.direction) {\n      case 'n':\n        x = this.x;\n        y = this.y - 1;\n        break;\n      case 'e':\n        x = this.x + 1;\n        y = this.y;\n        break;\n      case 's':\n        x = this.x;\n        y = this.y + 1;\n        break;\n      case 'w':\n        x = this.x - 1;\n        y = this.y;\n        break;\n      default:\n        this.skipMove();\n        this.movesSkipped++;\n    } \n    const inspectResult = this.map.getCellInfo(x, y);\n    switch (inspectResult.status) {\n      case 'clear':\n        const [prevX, prevY] = this.position;\n        this.x = x;\n        this.y = y;\n        this.position = [x, y];\n        this.status = this.commands.length ? this.status : 'stopped';\n        this.missionResult = this.commands.length ? this.missionResult : 'accomplished';\n        this.travelLog.push({\n          message: `Moved forward to position x: ${x}, y: ${y}.${this.missionResult === 'accomplished' ? '\\nMission accomplished!' : ''}`,\n          missionStatus: this.missionResult,\n          status: this.status,\n        });\n        this.map.moveRover(this, x, y);\n        this.map.clearCell(prevX, prevY);\n        this.map.recordMove();\n        break;\n      case 'occupied':\n      case 'error':\n        this.skipMove();\n        this.movesSkipped++;\n        this.commands.push(command);\n        break;\n      case 'unreachable':\n        this.stop(inspectResult.id);\n        break;\n      default:\n        this.skipMove();\n        this.movesSkipped++;\n        this.commands.push(command);\n    }\n  }\n\n  moveBackward(command) {\n    let x;\n    let y;\n    switch(this.direction) {\n      case 'n':\n        x = this.x;\n        y = this.y + 1;\n        break;\n      case 'e':\n        x = this.x - 1;\n        y = this.y;\n        break;\n      case 's':\n        x = this.x;\n        y = this.y - 1;\n        break;\n      case 'w':\n        x = this.x + 1;\n        y = this.y;\n        break;\n      default:\n        this.skipMove();\n        this.movesSkipped++;\n    } \n    const inspectResult = this.map.getCellInfo(x, y);\n    switch (inspectResult.status) {\n      case 'clear':\n        const [prevX, prevY] = this.position;\n        this.x = x;\n        this.y = y;\n        this.position = [x, y];\n        this.status = this.commands.length ? this.status : 'stopped';\n        this.missionResult = this.commands.length ? this.missionResult : 'accomplished';\n        this.travelLog.push({\n          message: `Moved backward to position x: ${x}, y: ${y}.`,\n          missionStatus: this.missionResult,\n          status: this.status,\n        });\n        this.map.moveRover(this, x, y);\n        this.map.clearCell(prevX, prevY);\n        this.map.recordMove();\n        break;\n      case 'occupied':\n      case 'error':\n        this.skipMove();\n        this.movesSkipped++;\n        this.commands.push(command);\n        break;\n      case 'unreachable':\n        this.stop(inspectResult.id);\n        break;\n      default:\n        this.skipMove();\n        this.movesSkipped++;\n        this.commands.push(command);\n    }\n  }\n\n  addCommands(val) {\n    if (typeof val === 'string') {\n      val = val.replace(/\\s/g, '');\n      for (let com of val) {\n        this.commands.unshift(com);\n      }\n    } else if (Array.isArray(val)) {\n      val = val.map(com => com.trim().charAt[0]);\n      this.commands = [...val.reverse(), ...this.commands];\n    } else {\n      console.error('Couldn\\'t recognize input. Must be a string or array of commands');\n    }\n  }\n\n  move() {\n    if (this.status === 'stopped') return;\n    const command = this.commands.pop();\n    switch (true) {\n      case /f/i.test(command):\n        this.moveForward(command);\n        break;\n      case /b/i.test(command):\n        this.moveBackward(command);\n        break;\n      case /l/i.test(command):\n        this.turnLeft();\n        break;\n      case /r/i.test(command):\n        this.turnRight();\n        break;\n      case /s/i.test(command):\n        this.skipMove();\n        break;\n      default:\n        this.skipMove();\n        this.movesSkipped++;\n    }\n  }\n}\n\nexport default Rover;","import Rover from './Rover.js';\n\nclass Grid {\n  constructor(x, y) {\n    this.xSize = x;\n    this.ySize = y;\n    this.map = [...Array(y)].map(i => Array(x).fill(0));\n    this.history = [];\n    this.rovers = [];\n    this.roverCount = 0;\n  }\n\n  addObstacle(x, y) {\n    if (this.map[y][x] === 0) {\n      this.map[y][x] = 'X';\n    } else {\n      console.error(`Position x: ${x}, y: ${y} is taken or non-existent`);\n    }\n  }\n\n  addRover(rover, x, y) {\n    if (this.roverCount > 3) {\n      console.error(`Maximum number of rovers (4) reached`);\n      return;\n    }\n    if (this.map[y][x] === 0) {\n      this.map[y][x] = rover;\n      this.rovers.push(rover);\n      this.roverCount++;\n      this.recordMove();\n    } else {\n      console.error(`Position x: ${x}, y: ${y} is taken or non-existent`);\n    }\n  }\n\n  moveRover(rover, x, y) {\n    this.map[y][x] = rover;\n  }\n\n  clearCell(x, y) {\n    this.map[y][x] = 0;\n  }\n\n  getCellInfo(x, y) {\n    switch(true) {\n      case x < 0 || x >= this.xSize || y < 0 || y >= this.ySize:\n        return {\n          status: 'unreachable',\n          id: 'end of map',\n        }\n      case this.map[y][x] === 0:\n        return {\n          status: 'clear',\n          id: 0,\n        };\n      case this.map[y][x] === 'X':\n        return {\n          status: 'unreachable',\n          id: 'obstacle',\n        };\n      case this.map[y][x] instanceof Rover:\n        return {\n          status: this.map[y][x].status === 'moving' ? 'occupied' : 'unreachable',\n          id: 'rover',\n        };\n      default:\n        console.error(`Couldn't recognize position or object on position x: ${x}, y: ${y}.`);\n        return {\n          status: 'error',\n          id: -1,\n        };\n    }\n  }\n\n  recordMove() {\n    const mapClone = [];\n    this.map.forEach(row => mapClone.push([...row].map((o) => {\n      if (o instanceof Rover) {\n        const obj = {};\n        obj.id = o.id;\n        obj.direction = o.direction;\n        obj.status = o.status === 'moving' ? o.status : o.missionResult === 'failed' ? o.status : 'finished';\n        return obj;\n      }\n      return o;\n    })));\n    this.history.push(mapClone);\n  }\n\n  run(mps) {\n    mps = mps === undefined ? 0 : parseInt(mps) > 0 && parseInt(mps) < 11 ? parseInt(mps) : 2;\n    let indexCounter = 0;\n    const int = setInterval(() => {\n      const getNextIndex = (arr, index, callback) => {\n        if (!arr.filter(callback).length) return -1;\n        if (index < arr.length && callback(arr[index])) return index;\n\t      return getNextIndex(arr, index >= arr.length - 1 ? 0 : ++index, callback);\n      };\n      indexCounter = getNextIndex(this.rovers, indexCounter, (rover) => rover.status === 'moving');\n      indexCounter === -1 ? clearInterval(int) : this.rovers[indexCounter++].move();\n    }, mps === 0 ? mps : 1000 / mps);\n  }\n}\n\nexport default Grid;","import React, { Component } from 'react';\n\nimport DialogCard from './dialogcards/DialogCard';\nimport TravelLog from './travellog/TravelLog';\n\nimport Grid from './classes/Grid';\nimport Rover from './classes/Rover';\n\nlet mars = {};\n\nclass IndexComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      grid: {\n        xSize: 10,\n        ySize: 10,\n      },\n      layout: [],\n      listening: false,\n      controlStep: 1,\n      prinntTravelLog: false,\n    };\n\n    this.updateGridSize = this.updateGridSize.bind(this);\n    this.nextMessage = this.nextMessage.bind(this);\n    this.addObstacle = this.addObstacle.bind(this);\n    this.handleObstacleClick = this.handleObstacleClick.bind(this);\n    this.addRover = this.addRover.bind(this);\n    this.handleRoverClick = this.handleRoverClick.bind(this);\n    this.addRoverCommands = this.addRoverCommands.bind(this);\n    this.runMap = this.runMap.bind(this);\n    this.printTravelLog = this.printTravelLog.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentWillMount() {\n    document.body.style.setProperty('--grid-x-size', this.state.grid.xSize);\n    document.body.style.setProperty('--grid-y-size', this.state.grid.ySize);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    const { controlStep, listening } = nextState;\n    if ((controlStep === 2 || controlStep === 3) && !listening) {\n      this.setState({\n        listening: true,\n      });\n    } else if ((controlStep !== 2 && controlStep !== 3) && listening) {\n      this.setState({\n        listening: false,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const { controlStep, grid } = this.state;\n    switch(controlStep) {\n      case 2:\n        document.body.style.setProperty('--grid-x-size', grid.xSize);\n        document.body.style.setProperty('--grid-y-size', grid.ySize);\n        document.getElementById('grid').addEventListener('click', this.handleObstacleClick);\n        break;\n      case 3:\n        document.getElementById('grid').removeEventListener('click', this.handleObstacleClick);\n        document.getElementById('grid').addEventListener('click', this.handleRoverClick);\n        break;\n      case 4:\n        document.getElementById('grid').removeEventListener('click', this.handleRoverClick);\n        break;\n      default:\n    }\n  }\n\n  componentDidMount() {\n    const { grid } = this.state;\n    mars = new Grid(grid.xSize, grid.ySize);\n    this.setState({\n      layout: mars.map,\n    });\n  }\n\n  updateGridSize(size) {\n    size = Number(size) > 4 && Number(size) < 26 ? Number(size) : 10;\n    mars = new Grid(size, size);\n    this.setState({\n      grid: {\n        xSize: size,\n        ySize: size,\n      },\n      layout: mars.map,\n      controlStep: this.state.controlStep === 1 ? 2 : this.state.controlStep,\n    });\n  }\n\n  nextMessage(step) {\n    step = step || this.state.controlStep + 1;\n    this.setState({\n      controlStep: step,\n    });\n  }\n\n  addObstacle(x, y) {\n    mars.addObstacle(x, y);\n    this.setState({\n      layout: mars.map,\n    });\n  }\n\n  handleObstacleClick(e) {\n    const { xSize } = this.state.grid;\n    if (e.target.classList.contains('listen')) {\n      const x = e.target.id % xSize;\n      const y = Math.floor(e.target.id / xSize);\n      this.addObstacle(x, y);\n    }\n  }\n\n  handleRoverClick(e) {\n    const { xSize } = this.state.grid;\n    if (e.target.classList.contains('listen')) {\n      const x = e.target.id % xSize;\n      const y = Math.floor(e.target.id / xSize);\n      this.addRover(x, y);\n    }\n  }\n\n  addRover(x, y) {\n    const currentRoverIndex = mars.roverCount || 0;\n    const rover = new Rover(currentRoverIndex + 1, x, y, 'n', mars);\n    this.setState({\n      layout: mars.history[mars.history.length - 1],\n      controlStep: this.state.controlStep + 1,\n    });\n  }\n\n  addRoverCommands(val) {\n    const currentRover = mars.rovers[mars.rovers.length - 1];\n    currentRover.addCommands(val);\n    this.nextMessage();\n  }\n\n  printTravelLog() {\n    this.setState({\n      prinntTravelLog: true,\n    });\n  }\n\n  reset() {\n    mars = {};\n    this.setState({\n      grid: {\n        xSize: 10,\n        ySize: 10,\n      },\n      layout: [],\n      listening: false,\n      controlStep: 1,\n      prinntTravelLog: false,\n    });\n  }\n\n  runMap(mps) {\n    mps = parseInt(mps);\n    mps = mps > 0 && mps < 25 ? mps : 2;\n    mars.run();\n    let index = 0;\n    let int = setInterval(() => {\n      if (index >= mars.history.length - 1) {\n        clearInterval(int);\n        int = null;\n      }\n      this.setState({\n        layout: mars.history[index],\n        controlStep: int ? 7 : 8,\n      });\n      index++;\n    }, 1000 / mps);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"flex-row\">\n          <div className=\"grid-container flex-center\">\n            <div className=\"grid\" id=\"grid\">\n              {this.state.layout.flat().map((cell, index) => {\n                const classList = ['grid-cell'];\n                if (cell === 'X') classList.push('x');\n                if (cell instanceof Object) {\n                  classList.push('rover', `rover-${cell.id}`, `rover-${cell.direction}`);\n                  if (cell.status === 'stopped') classList.push('stuck');\n                  if (cell.status === 'finished') classList.push('won');\n                }\n                if (this.state.listening && cell === 0) classList.push('listen');\n                return (\n                  <div className={classList.join(' ')} key={`cell-${index}`} id={index} />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"controls-container flex-center\">\n              <DialogCard\n                step={this.state.controlStep}\n                currentGridSize={this.state.grid.xSize}\n                updateGridSize={this.updateGridSize}\n                nextMessage={this.nextMessage}\n                roverCount={mars.hasOwnProperty('roverCount') ? mars.roverCount : 0}\n                addRoverCommands={this.addRoverCommands}\n                runMap={this.runMap}\n                viewTravelLog={this.printTravelLog}\n                resetGrid={this.reset}\n              />\n          </div>\n        </div>\n        {this.state.prinntTravelLog ? <TravelLog rovers={mars.rovers} resetGrid={this.reset} /> : null}\n      </>\n    );\n  }\n}\n\nexport default IndexComponent;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/global.scss';\nimport IndexComponent from './IndexComponent';\n\nconst rootNode = document.getElementById('root');\n\nReactDOM.render(<IndexComponent />, rootNode);"],"sourceRoot":""}